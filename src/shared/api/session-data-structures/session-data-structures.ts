import { customInstance } from '.././customInstance';
/**
 * Generated by orval v7.4.1 🍺
 * Do not edit manually.
 * GraphWay API
 * API для работы с режимами сессий
 * OpenAPI spec version: 1.0
 */
import type {
  CreateSessionDataStructureRequestDTO,
  FindSessionDataStructuresResponseDTO,
} from '.././model';

/**
 * @summary Find session DataStructures
 */
export type sessionDataStructureControllerFindSessionDataStructuresResponse = {
  data: FindSessionDataStructuresResponseDTO | void;
  status: number;
  headers: Headers;
};

export const getSessionDataStructureControllerFindSessionDataStructuresUrl =
  () => {
    return `/session-data-structures/all`;
  };

export const sessionDataStructureControllerFindSessionDataStructures = async (
  options?: RequestInit,
): Promise<sessionDataStructureControllerFindSessionDataStructuresResponse> => {
  return customInstance<sessionDataStructureControllerFindSessionDataStructuresResponse>(
    getSessionDataStructureControllerFindSessionDataStructuresUrl(),
    {
      ...options,
      method: 'GET',
    },
  );
};

/**
 * @summary Create a session DataStructure
 */
export type sessionDataStructureControllerCreateSessionDataStructureResponse = {
  data: void | void;
  status: number;
  headers: Headers;
};

export const getSessionDataStructureControllerCreateSessionDataStructureUrl =
  () => {
    return `/session-data-structures/create`;
  };

export const sessionDataStructureControllerCreateSessionDataStructure = async (
  createSessionDataStructureRequestDTO: CreateSessionDataStructureRequestDTO,
  options?: RequestInit,
): Promise<sessionDataStructureControllerCreateSessionDataStructureResponse> => {
  return customInstance<sessionDataStructureControllerCreateSessionDataStructureResponse>(
    getSessionDataStructureControllerCreateSessionDataStructureUrl(),
    {
      ...options,
      method: 'POST',
      headers: { 'Content-Type': 'application/json', ...options?.headers },
      body: JSON.stringify(createSessionDataStructureRequestDTO),
    },
  );
};
