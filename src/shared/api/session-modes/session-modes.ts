import { customInstance } from '.././customInstance';
/**
 * Generated by orval v7.4.1 🍺
 * Do not edit manually.
 * GraphWay API
 * API для работы с режимами сессий
 * OpenAPI spec version: 1.0
 */
import type {
  CreateSessionModeRequestDTO,
  FindSessionModesResponseDTO,
} from '.././model';

/**
 * @summary Find session modes
 */
export type sessionModeControllerFindSessionModesResponse = {
  data: FindSessionModesResponseDTO | void;
  status: number;
  headers: Headers;
};

export const getSessionModeControllerFindSessionModesUrl = () => {
  return `/session-modes/all`;
};

export const sessionModeControllerFindSessionModes = async (
  options?: RequestInit,
): Promise<sessionModeControllerFindSessionModesResponse> => {
  return customInstance<sessionModeControllerFindSessionModesResponse>(
    getSessionModeControllerFindSessionModesUrl(),
    {
      ...options,
      method: 'GET',
    },
  );
};

/**
 * @summary Create a session mode
 */
export type sessionModeControllerCreateSessionModeResponse = {
  data: void | void;
  status: number;
  headers: Headers;
};

export const getSessionModeControllerCreateSessionModeUrl = () => {
  return `/session-modes/create`;
};

export const sessionModeControllerCreateSessionMode = async (
  createSessionModeRequestDTO: CreateSessionModeRequestDTO,
  options?: RequestInit,
): Promise<sessionModeControllerCreateSessionModeResponse> => {
  return customInstance<sessionModeControllerCreateSessionModeResponse>(
    getSessionModeControllerCreateSessionModeUrl(),
    {
      ...options,
      method: 'POST',
      headers: { 'Content-Type': 'application/json', ...options?.headers },
      body: JSON.stringify(createSessionModeRequestDTO),
    },
  );
};
